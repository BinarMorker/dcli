name: Rust

on: [push]

jobs:

  build-linux-musl:
    runs-on: ubuntu-latest
    steps:
      - name: Step Settings
        id: settings
        run: |
            echo ::set-output name=SOURCE_TAG::${GITHUB_REF/refs\/tags\//}
            echo ::set-output name=TARGET_NAME::x86_64-unknown-linux-musl
      - uses: actions/checkout@master
      - name: Build and Test
        uses: stevenleadbeater/rust-musl-builder@master
        with:
          args: /bin/bash -c "pwd && ls -l && rustup update && cargo build --manifest-path=src/Cargo.toml --release --target=x86_64-unknown-linux-musl"

  build-linux-x86_64:
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && !contains(github.ref, 'refs/tags/')

    steps:
      #set some environement variables that we can use through the rest of our
      #action
      - name: Step Settings
        id: settings
        run: |
          echo ::set-output name=SOURCE_TAG::${GITHUB_REF/refs\/tags\//}
          echo ::set-output name=TARGET_NAME::x86_64-unknown-linux-gnu

      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ steps.settings.outputs.TARGET_NAME }}
          override: true
      - uses: actions-rs/cargo@v1
        env:
          DESTINY_API_KEY: ${{ secrets.DESTINY_API_KEY }}
        with:
          use-cross: true
          command: build
          args: --manifest-path=src/Cargo.toml

  build-windows-msvc:
    runs-on: windows-latest
    if: github.event_name == 'push' && contains(github.ref, 'refs/tags/')
    steps:

      #set some environement variables that we can use through the rest of our
      #action
      - name: Step Settings
        id: settings
        run: |
          echo ::set-output name=SOURCE_TAG::${GITHUB_REF/refs\/tags\//}
          echo ::set-output name=TARGET_NAME::x86_64-pc-windows-msvc
        shell: bash

      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ steps.settings.outputs.TARGET_NAME }}
          override: true
      - uses: actions-rs/cargo@v1
        env:
          DESTINY_API_KEY: ${{ secrets.DESTINY_API_KEY }}
        with:
          use-cross: true
          command: build
          args: --manifest-path=src/Cargo.toml --release --target ${{ steps.settings.outputs.TARGET_NAME }}
      - name: Build
        env:
          SOURCE_TAG: ${{ steps.settings.outputs.SOURCE_TAG }}
          TARGET_NAME: ${{ steps.settings.outputs.TARGET_NAME }}
        run: echo SOURCE_TAG ${SOURCE_TAG} && ls -l src/target/ && ls -l src/target/${TARGET_NAME}/release/ && strip src/target/${TARGET_NAME}/release/dclia.exe src/target/${TARGET_NAME}/release/dclic.exe src/target/${TARGET_NAME}/release/dclics.exe src/target/${TARGET_NAME}/release/dclim.exe src/target/${TARGET_NAME}/release/dclims.exe src/target/${TARGET_NAME}/release/dclis.exe
        shell: bash
      - name: Zip
        run: Compress-Archive -Path README.md, LICENSE.md, src/target/${{ steps.settings.outputs.TARGET_NAME }}/release/dclia.exe, src/target/${{ steps.settings.outputs.TARGET_NAME }}/release/dclic.exe, src/target/${{ steps.settings.outputs.TARGET_NAME }}/release/dclics.exe, src/target/${{ steps.settings.outputs.TARGET_NAME }}/release/dclim.exe, src/target/${{ steps.settings.outputs.TARGET_NAME }}/release/dclims.exe, src/target/${{ steps.settings.outputs.TARGET_NAME }}/release/dclis.exe -DestinationPath dcli_${{ steps.settings.outputs.TARGET_NAME }}_${{ steps.settings.outputs.SOURCE_TAG }}.zip -CompressionLevel Optimal
      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            dcli_${{ steps.settings.outputs.TARGET_NAME }}_${{ steps.settings.outputs.SOURCE_TAG }}.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build-mac-x86_64:
    runs-on: macos-10.15
    if: github.event_name == 'push' && contains(github.ref, 'refs/tags/')
    steps:

      #set some environement variables that we can use through the rest of our
      #action
      - name: Step Settings
        id: settings
        run: |
          echo ::set-output name=SOURCE_TAG::${GITHUB_REF/refs\/tags\//}
          echo ::set-output name=TARGET_NAME::x86_64-apple-darwin

      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ steps.settings.outputs.TARGET_NAME }}
          override: true
      - uses: actions-rs/cargo@v1
        env:
          DESTINY_API_KEY: ${{ secrets.DESTINY_API_KEY }}
        with:
          use-cross: true
          command: build
          args: --manifest-path=src/Cargo.toml --release --target ${{ steps.settings.outputs.TARGET_NAME }}
      - name: Build
        env:
          SOURCE_TAG: ${{ steps.settings.outputs.SOURCE_TAG }}
          TARGET_NAME: ${{ steps.settings.outputs.TARGET_NAME }}
        run: echo SOURCE_TAG ${SOURCE_TAG} && ls -l src/target/${TARGET_NAME}/release/ && strip src/target/${TARGET_NAME}/release/dclia src/target/${TARGET_NAME}/release/dclic src/target/${TARGET_NAME}/release/dclics src/target/${TARGET_NAME}/release/dclim src/target/${TARGET_NAME}/release/dclims src/target/${TARGET_NAME}/release/dclis && zip -j README.md LICENSE.md src/target/${TARGET_NAME}/release/dclia src/target/${TARGET_NAME}/release/dclic src/target/${TARGET_NAME}/release/dclics src/target/${TARGET_NAME}/release/dclim src/target/${TARGET_NAME}/release/dclims src/target/${TARGET_NAME}/release/dclis
        
      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            dcli_${{ steps.settings.outputs.TARGET_NAME }}_${{ steps.settings.outputs.SOURCE_TAG }}.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

